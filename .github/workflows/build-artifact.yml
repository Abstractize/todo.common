name: 📦 Publish Common Library to GitHub Packages

on:
  #push:
  pull_request:
    branches:
      - main

jobs:
  publish:
    name: Pack and Push ToDoApp.*
    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: read

    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4

      - name: 🛠️ Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
          source-url: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 🔐 Authenticate with GitHub Packages
        run: |
          if ! dotnet nuget list source | grep -q "github"; then
            dotnet nuget add source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json \
              --name github \
              --username ${{ github.actor }} \
              --password ${{ secrets.GITHUB_TOKEN }} \
              --store-password-in-clear-text
          else
            echo "NuGet source 'github' already exists"
          fi

      - name: 📦 Pack all ToDoApp.* projects with dynamic version
        run: |
          VERSION="1.0.0-ci-$(date +%Y%m%d).${{ github.run_number }}"
          echo "📦 Using version: $VERSION"
          shopt -s nullglob
          for project in $(find . -name 'ToDoApp.*.csproj'); do
            echo "📦 Packing $project with version $VERSION"
            dotnet pack "$project" --configuration Release --output ./nupkgs /p:PackageVersion=$VERSION
          done

      - name: 🚀 Push packages to GitHub Packages
        run: |
          shopt -s nullglob
          for package in ./nupkgs/*.nupkg; do
            echo "🚀 Pushing $package"
            dotnet nuget push "$package" \
              --source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" \
              --api-key ${{ secrets.GITHUB_TOKEN }}
          done